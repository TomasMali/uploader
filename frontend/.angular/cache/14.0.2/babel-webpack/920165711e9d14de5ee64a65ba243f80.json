{"ast":null,"code":"import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/file-upload.service\";\nimport * as i2 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    width: a0\n  };\n};\n\nfunction FileUploadComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r0.progress + \"%\"));\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r0.progress);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.progress, \"% \");\n  }\n}\n\nfunction FileUploadComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message, \"\\n\");\n  }\n}\n\nfunction FileUploadComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 17);\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"href\", file_r3.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(file_r3.name);\n  }\n}\n\nexport class FileUploadComponent {\n  constructor(uploadService) {\n    this.uploadService = uploadService;\n    this.progress = 0;\n    this.message = '';\n  }\n\n  ngOnInit() {\n    this.fileInfos = this.uploadService.getFiles();\n  }\n\n  selectFile(event) {\n    this.selectedFiles = event.target.files;\n  }\n\n  upload() {\n    this.progress = 0;\n\n    if (this.selectedFiles) {\n      const file = this.selectedFiles.item(0);\n\n      if (file) {\n        this.currentFile = file;\n        this.uploadService.upload(this.currentFile).subscribe({\n          next: event => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round(100 * event.loaded / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n              this.fileInfos = this.uploadService.getFiles();\n            }\n          },\n          error: err => {\n            console.log(err);\n            this.progress = 0;\n\n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the file!';\n            }\n\n            this.currentFile = undefined;\n          }\n        });\n      }\n\n      this.selectedFiles = undefined;\n    }\n  }\n\n}\n\nFileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.FileUploadService));\n};\n\nFileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUploadComponent,\n  selectors: [[\"app-file-upload\"]],\n  decls: 15,\n  vars: 6,\n  consts: [[1, \"row\", \"mb-5\", 2, \"margin-top\", \"100px\"], [1, \"col-8\"], [1, \"btn\", \"btn-default\", \"p-0\"], [\"type\", \"file\", 3, \"change\"], [1, \"col-4\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"disabled\", \"click\"], [\"class\", \"progress my-3\", 4, \"ngIf\"], [\"class\", \"alert alert-secondary\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"card\", \"mt-3\"], [1, \"card-header\"], [1, \"list-group\", \"list-group-flush\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"progress\", \"my-3\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-info\", 3, \"ngStyle\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\"], [1, \"list-group-item\"], [3, \"href\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-danger\", \"ml-5\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_3_listener($event) {\n        return ctx.selectFile($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function FileUploadComponent_Template_button_click_5_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵtext(6, \" Upload \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(7, FileUploadComponent_div_7_Template, 3, 5, \"div\", 6);\n      i0.ɵɵtemplate(8, FileUploadComponent_div_8_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9);\n      i0.ɵɵtext(11, \"List of Files\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"ul\", 10);\n      i0.ɵɵtemplate(13, FileUploadComponent_li_13_Template, 5, 2, \"li\", 11);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.selectedFiles);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentFile);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 4, ctx.fileInfos));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmaWxlLXVwbG9hZC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,sBAA5C;;;;;;;;;;;;;ICiBAC,gCAA+C,CAA/C,EAA+C,KAA/C,EAA+C,EAA/C;IASIA;IACFA;;;;;IAHEA;IAAAA;IAHAA;IAKAA;IAAAA;;;;;;IAIJA;IACEA;IACFA;;;;;IADEA;IAAAA;;;;;;IAMEA,+BAAmE,CAAnE,EAAmE,GAAnE,EAAmE,EAAnE;IAC2BA;IAAeA;IAAOA;IAAyDA;IAAMA;;;;;IAA3GA;IAAAA;IAAsBA;IAAAA;;;;AD7B/B,OAAM,MAAOC,mBAAP,CAA0B;EAQ9BC,YAAoBC,aAApB,EAAoD;IAAhC;IALpB,gBAAW,CAAX;IACA,eAAU,EAAV;EAIwD;;EAExDC,QAAQ;IACN,KAAKC,SAAL,GAAiB,KAAKF,aAAL,CAAmBG,QAAnB,EAAjB;EACD;;EAEDC,UAAU,CAACC,KAAD,EAAW;IACnB,KAAKC,aAAL,GAAqBD,KAAK,CAACE,MAAN,CAAaC,KAAlC;EACD;;EAEDC,MAAM;IACJ,KAAKC,QAAL,GAAgB,CAAhB;;IAEA,IAAI,KAAKJ,aAAT,EAAwB;MACtB,MAAMK,IAAI,GAAgB,KAAKL,aAAL,CAAmBM,IAAnB,CAAwB,CAAxB,CAA1B;;MAEA,IAAID,IAAJ,EAAU;QACR,KAAKE,WAAL,GAAmBF,IAAnB;QAEA,KAAKX,aAAL,CAAmBS,MAAnB,CAA0B,KAAKI,WAA/B,EAA4CC,SAA5C,CAAsD;UACpDC,IAAI,EAAGV,KAAD,IAAe;YACnB,IAAIA,KAAK,CAACW,IAAN,KAAerB,aAAa,CAACsB,cAAjC,EAAiD;cAC/C,KAAKP,QAAL,GAAgBQ,IAAI,CAACC,KAAL,CAAY,MAAMd,KAAK,CAACe,MAAb,GAAuBf,KAAK,CAACgB,KAAxC,CAAhB;YACD,CAFD,MAEO,IAAIhB,KAAK,YAAYT,YAArB,EAAmC;cACxC,KAAK0B,OAAL,GAAejB,KAAK,CAACkB,IAAN,CAAWD,OAA1B;cACA,KAAKpB,SAAL,GAAiB,KAAKF,aAAL,CAAmBG,QAAnB,EAAjB;YACD;UACF,CARmD;UASpDqB,KAAK,EAAGC,GAAD,IAAa;YAClBC,OAAO,CAACC,GAAR,CAAYF,GAAZ;YACA,KAAKf,QAAL,GAAgB,CAAhB;;YAEA,IAAIe,GAAG,CAACD,KAAJ,IAAaC,GAAG,CAACD,KAAJ,CAAUF,OAA3B,EAAoC;cAClC,KAAKA,OAAL,GAAeG,GAAG,CAACD,KAAJ,CAAUF,OAAzB;YACD,CAFD,MAEO;cACL,KAAKA,OAAL,GAAe,4BAAf;YACD;;YAED,KAAKT,WAAL,GAAmBe,SAAnB;UACD;QApBmD,CAAtD;MAsBD;;MAED,KAAKtB,aAAL,GAAqBsB,SAArB;IACD;EACF;;AArD6B;;;mBAAnB9B,qBAAmBD;AAAA;;;QAAnBC;EAAmB+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCpC,+BAAiD,CAAjD,EAAiD,KAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,OAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,OAAjD,EAAiD,CAAjD;MAG0BA;QAAA,OAAUqC,sBAAV;MAA4B,CAA5B;MAApBrC;MAIJA,+BAAmB,CAAnB,EAAmB,QAAnB,EAAmB,CAAnB;MAIIA;QAAA,OAASqC,YAAT;MAAiB,CAAjB;MAEArC;MACFA;MAIJA;MAaAA;MAIAA,+BAAuB,EAAvB,EAAuB,KAAvB,EAAuB,CAAvB;MAC2BA;MAAaA;MACtCA;MACEA;;MAIFA;;;;MAhCIA;MAAAA;MAQAA;MAAAA;MAaAA;MAAAA;MAOmBA;MAAAA","names":["HttpEventType","HttpResponse","i0","FileUploadComponent","constructor","uploadService","ngOnInit","fileInfos","getFiles","selectFile","event","selectedFiles","target","files","upload","progress","file","item","currentFile","subscribe","next","type","UploadProgress","Math","round","loaded","total","message","body","error","err","console","log","undefined","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/tomasmali/Desktop/uploader/frontend/src/app/components/file-upload/file-upload.component.ts","/Users/tomasmali/Desktop/uploader/frontend/src/app/components/file-upload/file-upload.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n  selectedFiles?: FileList;\n  currentFile?: File;\n  progress = 0;\n  message = '';\n\n  fileInfos?: Observable<any>;\n\n  constructor(private uploadService: FileUploadService) {}\n\n  ngOnInit(): void {\n    this.fileInfos = this.uploadService.getFiles();\n  }\n\n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n\n  upload(): void {\n    this.progress = 0;\n\n    if (this.selectedFiles) {\n      const file: File | null = this.selectedFiles.item(0);\n\n      if (file) {\n        this.currentFile = file;\n\n        this.uploadService.upload(this.currentFile).subscribe({\n          next: (event: any) => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round((100 * event.loaded) / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n              this.fileInfos = this.uploadService.getFiles();\n            }\n          },\n          error: (err: any) => {\n            console.log(err);\n            this.progress = 0;\n\n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the file!';\n            }\n\n            this.currentFile = undefined;\n          },\n        });\n      }\n\n      this.selectedFiles = undefined;\n    }\n  }\n}\n","<div class=\"row mb-5\" style=\"margin-top: 100px;\">\n  <div class=\"col-8\">\n    <label class=\"btn btn-default p-0\">\n      <input  type=\"file\" (change)=\"selectFile($event)\" />\n    </label>\n  </div>\n\n  <div class=\"col-4\">\n    <button\n      class=\"btn btn-success btn-sm\"\n      [disabled]=\"!selectedFiles\"\n      (click)=\"upload()\"\n    >\n      Upload\n    </button>\n  </div>\n</div>\n\n<div *ngIf=\"currentFile\" class=\"progress my-3\">\n  <div\n    class=\"progress-bar progress-bar-info\"\n    role=\"progressbar\"\n    attr.aria-valuenow=\"{{ progress }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    [ngStyle]=\"{ width: progress + '%' }\"\n  >\n    {{ progress }}%\n  </div>\n</div>\n\n<div *ngIf=\"message\" class=\"alert alert-secondary\" role=\"alert\">\n  {{ message }}\n</div>\n\n<div class=\"card mt-3\">\n  <div class=\"card-header\">List of Files</div>\n  <ul class=\"list-group list-group-flush\">\n    <li *ngFor=\"let file of fileInfos | async\" class=\"list-group-item\">\n      <a href=\"{{ file.url }}\">{{ file.name }}</a>   <button type=\"button\" class=\"btn btn-sm btn-danger ml-5\">Delete</button>\n\n    </li>\n  </ul>\n</div>\n"]},"metadata":{},"sourceType":"module"}